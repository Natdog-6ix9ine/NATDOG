name: Hexo Deploy to GitHub Pages

on:
  push:
    branches:
      - main        # 监听 main 分支的推送
      - mysource    # 监听 mysource 分支的推送

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 检出代码仓库
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. 设置 Node.js 环境
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      # 3. 安装依赖
      - name: Install Dependencies
        run: |
        git checkout main
        npm install

      # 4. 暂存未提交的更改
      - name: Stash changes if any
        run: |
          git diff --exit-code || git stash -u

      # 5. 拉取所有远程分支，确保获取 `mysource` 分支
      - name: Fetch all branches
        run: git fetch --all

      # 6. 同步 mysource 分支内容到 main 分支的 source 文件夹
      - name: Sync mysource to source folder in main
        run: |
          # 切换到 mysource 分支并获取内容
          git checkout mysource || git checkout -b mysource origin/mysource

          # 创建临时文件夹以保存 mysource 内容
          mkdir -p temp_source
          rsync -av --exclude='.git/' --exclude='node_modules/' ./ ./temp_source/

          # 切换回 main 分支
          git checkout main
          git pull origin main

          # 将 mysource 内容复制到 main 分支的 source 文件夹
          mkdir -p source
          rsync -av --delete temp_source/ ./source/

      # 7. 清理缓存文件（等同于 `hexo clean`）
      - name: Clean Cache
        run: npx hexo clean

      # 8. 生成静态文件（等同于 `hexo generate`）
      - name: Generate Static Files
        run: npx hexo generate

      # 9. 部署到 GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.GH_KEY }}
          publish_dir: ./public
          publish_branch: main
          external_repository: Natdog-6ix9ine/Natdog-6ix9ine.github.io
